const API_BASE="https://api.reeses.ca";const els=e=>document.getElementById(e),tokenKey="admin_token";function getToken(){return localStorage.getItem(tokenKey)}function setToken(e){localStorage.setItem(tokenKey,e)}function clearToken(){localStorage.removeItem(tokenKey)}function authHeaders(){const e=getToken();return e?{Authorization:"Bearer "+e}:{}}document.addEventListener("DOMContentLoaded",()=>{els("loginBtn").onclick=doLogin,els("logoutBtn").onclick=()=>{clearToken(),location.reload()},els("loadBtn").onclick=loadList,els("refreshBtn").onclick=loadList,els("filePick").addEventListener("change",e=>queueFiles(e.target.files));const e=els("drop");["dragenter","dragover"].forEach(t=>e.addEventListener(t,t=>{t.preventDefault(),t.stopPropagation(),e.style.background="rgba(255,255,255,.06)"})),["dragleave","drop"].forEach(t=>e.addEventListener(t,t=>{t.preventDefault(),t.stopPropagation(),e.style.background="transparent"})),e.addEventListener("drop",e=>queueFiles(e.dataTransfer.files)),getToken()?(showApp(),loadList()):showLogin()});function showLogin(){els("login").style.display="",els("controls").style.display="none",els("listing").style.display="none",els("uploader").style.display="none"}function showApp(){els("login").style.display="none",els("controls").style.display="",els("listing").style.display="",els("uploader").style.display=""}async function doLogin(){const e=els("adminUser").value.trim(),t=els("adminPass").value;els("loginMsg").textContent="...";try{const s=await fetch(API_BASE+"/api/admin/login",{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({username:e,password:t})});if(!s.ok)throw new Error("Login failed");const o=await s.json();setToken(o.token),els("whoami").textContent=e,els("loginMsg").textContent="Signed in.",showApp(),loadList()}catch(e){console.error(e),els("loginMsg").textContent="Invalid credentials."}}async function loadList(){const e=els("path").value.trim(),t=await fetch(API_BASE+"/api/admin/list?prefix="+encodeURIComponent(e),{headers:authHeaders()});if(!t.ok)return void alert("List failed");const s=await t.json(),o=els("list");o.innerHTML="";for(const t of s.prefixes){const s=document.createElement("div");s.className="item",s.innerHTML=`<div class="path">üìÅ ${t}</div>
      <div class="rowx"><button class="btn secondary">Open</button></div>`,s.querySelector("button").onclick=(()=>{els("path").value=(e?e.endsWith("/")?e:e+"/":"")+t+"/",loadList()}),o.appendChild(s)}for(const t of s.objects){const s=document.createElement("div");s.className="item monosmall";const n=(t.size/1024/1024).toFixed(2);s.innerHTML=`<div>üìÑ ${t.key}</div><div class="muted">${n} MB</div>
      <div class="rowx"><button class="btn secondary del">Delete</button></div>`,s.querySelector(".del").onclick=(()=>delObject(t.key)),o.appendChild(s)}}async function delObject(e){if(!confirm("Delete "+e+"?"))return;const t=await fetch(API_BASE+"/api/admin/delete",{method:"POST",headers:{"content-type":"application/json",...authHeaders()},body:JSON.stringify({key:e})});t.ok?loadList():alert("Delete failed")}function queueFiles(e){const t=els("path").value.trim();[...e].forEach(e=>startMultipartUpload(t,e))}async function startMultipartUpload(e,t){const s=e&&!e.endsWith("/")?e+"/":e||"",o=s+t.name,n=document.createElement("div");n.className="item",n.innerHTML=`<div><b>${t.name}</b> ‚Äî ${(t.size/1024/1024).toFixed(2)} MB</div>
    <div class="progressbar"><span></span></div>`,els("uploads").appendChild(n);const a=n.querySelector(".progressbar > span"),i=await fetch(API_BASE+"/api/admin/multipart/start",{method:"POST",headers:{"content-type":"application/json",...authHeaders()},body:JSON.stringify({key:o})});if(!i.ok)return void(n.innerHTML+='<div class="muted">Start failed</div>');const{uploadId:d,partSize:r}=await i.json(),l=[];const c=r||8*1024*1024,u=Math.ceil(t.size/c);for(let e=1;e<=u;e++){const s=(e-1)*c,i=Math.min(s+c,t.size),r=t.slice(s,i),p=await fetch(API_BASE+"/api/admin/multipart/uploadURL",{method:"POST",headers:{"content-type":"application/json",...authHeaders()},body:JSON.stringify({key:o,uploadId:d,partNumber:e})});if(!p.ok)return void(n.innerHTML+='<div class="muted">URL failed</div>');const{url:m}=await p.json(),h=await fetch(m,{method:"PUT",body:r});if(!h.ok)return void(n.innerHTML+='<div class="muted">PUT failed</div>');const f=h.headers.get("etag");l.push({partNumber:e,etag:f}),a.style.width=Math.round(e/u*100)+"%"}const p=await fetch(API_BASE+"/api/admin/multipart/complete",{method:"POST",headers:{"content-type":"application/json",...authHeaders()},body:JSON.stringify({key:o,uploadId:d,parts:l})});p.ok?(a.style.width="100%",n.innerHTML+="<div>‚úÖ Uploaded</div>",loadList()):n.innerHTML+='<div class="muted">Complete failed</div>'}